#!/bin/bash -ex

main() {
  echo "Executing:   codebuild $@"
  echo "Working dir: $PWD"

  export PATH="${PATH}:/usr/local/sbin:/usr/local/bin"

  if [[ $# -eq 0 ]]; then
    echo "Usage: codebuild {install|prebuild|build|postbuild}" 1>&2;
    exit 1;
  fi;

  case "$1" in
    install | prebuild | build | postbuild )
    "$1";;

    * )
    echo "Usage: codebuild {install|prebuild|build|postbuild}" 1>&2;
    exit 1;
  esac;

  return 0;
}

install() {
  yum install -y binutils gcc gcc-c++ libffi-devel openssl-devel python36 \
    python36-devel python36-pip zip
  pip-3.6 install awscli virtualenv
  return 0;
}

prebuild() {
  # Create a virtual environment for our use during the build.
  virtualenv --python python3.6 $CODEBUILD_SRC_DIR/venv
  source $CODEBUILD_SRC_DIR/venv/bin/activate
  pip-3.6 install -r requirements.txt
}

build() {
  source $CODEBUILD_SRC_DIR/venv/bin/activate
  ./setup.py build
  ./setup.py install
  ./setup.py nosetests
  zip /lambda.zip handler.py
  cd $CODEBUILD_SRC_DIR/venv/lib/python3.6/site-packages
  zip -r $CODEBUILD_SRC_DIR/lambda.zip . -x \
    "*.dist-info/*" "boto3/*" "botocore/*" "dateutil/*" "docutils/*" \
    "easy_install*" "nose/*" "pbr/*" "pip/*" "s3transfer/*" "setuptools/*" \
    "wheel/*"
}

postbuild() {
  # Upload the Lambda ZIP file to the staging bucket.
  S3_VERSION="$(aws --output text s3api put-object \
  --bucket "$S3_BUCKET" --key "$S3_KEY" --body lambda.zip \
  --query VersionId)"

  # Create a CFN parameter file.
  cat > cloudformation-params.json <<.EOF
{
    "Parameters": {
        "LambdaS3Bucket": "${S3_BUCKET}",
        "LambdaS3Key": "${S3_KEY}",
        "LambdaS3Version": "${S3_VERSION}",
        "LambdaRoleArn": "${LAMBDA_ROLE_ARN}"
    },
    "StackPolicy": {
        "Statement": [{
            "Effect": "Allow",
            "Action": "*",
            "Principal": "*",
            "Resource": "*"
        }]
    }
}
.EOF

  echo "Contents of cloudformation-params.json:"
  cat cloudformation-params.json

  aws s3 cp cloudformation-params.json s3://$S3_BUCKET/cloudformation-params.json
  aws s3 cp cloudformation.yml s3://$S3_BUCKET/cloudformation.yml
}

main "$@"
